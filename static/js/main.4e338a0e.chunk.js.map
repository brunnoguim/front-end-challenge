{"version":3,"sources":["contexts/LoginContext.js","pages/LoginPage.js","components/Header.js","components/Title.js","pages/DashboardPage.js","pages/CreatePage.js","pages/EditPage.js","App.js","index.js"],"names":["LoginContext","createContext","LoginProvider","children","useState","navers","setNavers","currentNaver","setCurrentNaver","isDelete","setIsDelete","isInspect","setIsInspect","isConfirmation","setIsConfirmation","isAdding","setIsAdding","isEditing","setIsEditing","token","setToken","Provider","value","apiURL","useLogin","logContext","useContext","LoginPage","history","email","setEmail","senha","setSenha","handleLogin","a","dadosLogin","toLowerCase","password","axios","post","result","localStorage","setItem","data","push","alert","inputLogin","evt","key","className","width","height","viewBox","fill","xmlns","fill-rule","clip-rule","d","placeholder","type","onKeyUp","onChange","e","target","onClick","Header","Title","DashboadPage","useEffect","get","headers","Authorization","then","response","catch","err","map","naver","src","url","alt","name","job_role","id","delete","project","CreatePage","setJob_role","admission_date","setAdmission_date","birthdate","setBirthdate","setName","setProject","setUrl","handleAdicionar","today","Date","toISOString","slice","BDyear","BDmonth","BDday","ADyear","ADmonth","ADday","dadosAdicionar","EditPage","handleEditar","dadosEditar","put","App","path","exact","component","DashboardPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e338a0e.chunk.js","sourcesContent":["import React, {createContext, useState, useContext} from 'react'\r\n\r\nconst LoginContext = createContext()\r\n\r\nexport default function LoginProvider ({children}){\r\n\r\n    //Navers\r\n    const [navers, setNavers] = useState(null)\r\n    const [currentNaver, setCurrentNaver] = useState(null)\r\n\r\n    //Modais\r\n    const [isDelete, setIsDelete] = useState(false)\r\n    const [isInspect, setIsInspect] = useState(false)\r\n    const [isConfirmation, setIsConfirmation] = useState(false)\r\n\r\n    //Navigation na InputsPage\r\n    const [isAdding, setIsAdding] = useState(false)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n\r\n    //API (e login/logout)\r\n    const [token, setToken] = useState(null)\r\n    const apiURL = \"https://navedex-api.herokuapp.com/v1\";\r\n\r\n    return (\r\n        <LoginContext.Provider value={{\r\n            apiURL,\r\n            token,\r\n            setToken,\r\n            navers,\r\n            setNavers,\r\n            currentNaver,\r\n            setCurrentNaver,\r\n            isDelete,\r\n            setIsDelete,\r\n            isInspect,\r\n            setIsInspect,\r\n            isConfirmation,\r\n            setIsConfirmation,\r\n            isAdding,\r\n            setIsAdding,\r\n            isEditing,\r\n            setIsEditing\r\n        }} >{children}</LoginContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useLogin(){\r\n    const logContext = useContext(LoginContext)\r\n    const { apiURL, navers, setNavers, currentNaver, setCurrentNaver, token, setToken, isDelete, setIsDelete, isInspect, setIsInspect, isConfirmation, setIsConfirmation, isAdding, setIsAdding, isEditing, setIsEditing } = logContext\r\n    return { apiURL, navers, setNavers, currentNaver, setCurrentNaver, token, setToken, isDelete, setIsDelete, isInspect, setIsInspect, isConfirmation, setIsConfirmation, isAdding, setIsAdding, isEditing, setIsEditing }\r\n}","import '../styles/login.css'\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport {useLogin} from '../contexts/LoginContext'\r\n\r\nconst LoginPage = ({ history }) => {\r\n\r\n    //Setando hook e dados do context\r\n    const { apiURL, setToken } = useLogin()\r\n\r\n    //Setando as variáveis que recebem os dados dos inputs\r\n    const [email, setEmail] = useState(\"\");\r\n    const [senha, setSenha] = useState(\"\");\r\n\r\n    //Função do submit do login\r\n    const handleLogin = async () => {\r\n        const dadosLogin ={\r\n            email: email.toLowerCase(), \r\n            password: senha\r\n        }\r\n        try{\r\n            let result = await axios.post(`${apiURL}/users/login`, dadosLogin)\r\n            localStorage.setItem(\"token\", result.data.token)\r\n            setToken(result.data.token)\r\n            history.push('/dashboard')\r\n        } catch (e) {\r\n            alert(\"Usuário ou senha não encontrado, confira os dados de login e tente novamente\")\r\n        }\r\n    }\r\n\r\n    //Função do submit do Login via Enter nas input boxes\r\n    const inputLogin = (evt) => {\r\n        if (evt.key === \"Enter\"){\r\n            handleLogin()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-container-logo\">\r\n                <svg width=\"236\" height=\"60\" viewBox=\"0 0 236 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M122.827 45.7818H130.554V19.6976H122.827V22.4392H122.75C121.823 20.7943 119.504 18.7577 115.255 18.7577C108.377 18.7577 102.273 24.1625 102.273 32.7006C102.273 40.142 107.064 46.6435 115.255 46.6435C118.268 46.6435 121.436 45.4685 122.75 42.9619H122.827V45.7818ZM122.827 32.6998C122.827 35.2064 121.204 39.358 116.414 39.358C111.777 39.358 110 35.2064 110 32.7782C110 29.8016 111.932 26.0417 116.336 26.0417C120.664 26.0417 122.827 29.5666 122.827 32.6998Z\" fill=\"#212121\"/>\r\n                    <path d=\"M150.181 45.7034H142.454L133.645 19.6192H141.372L146.318 35.9121H146.395L151.572 19.6192H159.299L150.181 45.7034Z\" fill=\"#212121\"/>\r\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M179.622 44.2146C181.785 42.7263 183.64 40.4547 184.876 37.5565V37.4782H176.995C175.913 38.8098 174.676 39.9064 172.281 39.9064C169.267 39.9064 166.717 38.1048 166.254 34.9716H185.572C185.577 34.9349 185.582 34.8985 185.587 34.8623C185.659 34.3579 185.726 33.8851 185.726 32.935C185.726 24.9452 179.931 18.6787 172.126 18.6787C164.245 18.6787 158.604 25.4152 158.604 32.7C158.604 40.5331 164.94 46.5646 172.281 46.5646C174.908 46.5646 177.458 45.7812 179.622 44.2146ZM172.204 25.3363C176.222 25.3363 177.767 28.2345 178.076 29.8012H166.331C166.717 28.2345 168.185 25.3363 172.204 25.3363Z\" fill=\"#212121\"/>\r\n                    <path d=\"M197.703 19.6187H204.89V22.3603H204.967C205.585 21.107 206.976 18.6787 211.381 18.6787V26.5118C207.826 26.5902 205.353 27.3735 205.353 31.29V45.6246H197.626V19.6187H197.703Z\" fill=\"#212121\"/>\r\n                    <path d=\"M226.912 26.9824C226.835 26.4341 226.758 25.0241 224.517 25.0241C222.894 25.0241 222.353 26.0424 222.353 26.7474C222.353 28.1574 224.285 28.9407 226.294 29.5673C230.622 30.8206 235.335 32.0739 235.335 37.7137C235.335 43.1969 230.544 46.6435 224.826 46.6435C220.963 46.6435 215.013 44.8419 214.317 37.9487H221.967C222.276 40.377 224.594 40.377 224.903 40.377C226.217 40.377 227.608 39.5937 227.608 38.3404C227.608 36.3038 225.676 36.0688 220.808 34.1889C217.485 33.0922 214.703 30.899 214.703 27.3741C214.703 22.2042 219.34 18.7577 224.672 18.7577C228.072 18.7577 233.944 20.0893 234.562 26.9824H226.912Z\" fill=\"#212121\"/>\r\n                    <path d=\"M96.2453 21.0285C94.8544 19.7752 92.1499 18.7569 89.6771 18.7569C85.1181 18.7569 84.1136 21.1851 83.3408 22.4384H83.2636V19.6969H76.0773V45.7811H83.8045V29.8799C83.8045 28.7049 84.2681 27.6866 85.0408 26.9816C85.1181 26.9033 85.1954 26.825 85.2726 26.825C85.3499 26.7466 85.4272 26.6683 85.5045 26.6683H85.5817C86.1999 26.2767 86.8954 26.0417 87.6681 26.0417C88.6726 26.0417 89.5226 26.4333 90.2181 27.06C90.9908 27.7649 91.5317 28.7832 91.5317 29.9582V30.9765C91.5317 31.1332 91.5317 31.3682 91.5317 31.5248V45.7811H99.2589V29.4099C99.2589 24.3184 97.6362 22.2034 96.2453 21.0285Z\" fill=\"#212121\"/>\r\n                    <path d=\"M190.749 45.7808C188.585 45.7808 186.885 44.0576 186.885 41.8643C186.885 39.671 188.585 37.9478 190.749 37.9478C192.913 37.9478 194.613 39.671 194.613 41.8643C194.613 43.9792 192.913 45.7808 190.749 45.7808Z\" fill=\"#212121\"/>\r\n                    <path d=\"M28.8491 45.2685L28.1586 60L40.5882 43.8107L41.8926 31.688L52.0972 21.4834L60.0767 0L38.5933 7.90281L28.312 18.1074L16.1893 19.4118L0 31.8414L14.7315 31.1509L28.8491 45.2685Z\" fill=\"#212121\"/>\r\n                    <path d=\"M15.4216 36.1374L23.8615 44.654L11.3551 49.1809L15.4216 36.1374Z\" fill=\"#212121\"/>\r\n                </svg>\r\n            </div>\r\n            <div>\r\n                <p>E-mail</p>\r\n                <input \r\n                placeholder=\"E-mail\"\r\n                type=\"email\"\r\n                value={email}\r\n                onKeyUp={inputLogin}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                ></input>\r\n            </div>\r\n            <div>\r\n                <p>Senha</p>\r\n                <input \r\n                placeholder=\"Senha\"\r\n                type=\"password\"\r\n                value={senha}\r\n                onKeyUp={inputLogin}\r\n                onChange={(e) => setSenha(e.target.value)}\r\n                ></input>\r\n            </div>\r\n            <div>\r\n                <button onClick={handleLogin}>Entrar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import '../styles/header.css'\r\nimport { useLogin } from '../contexts/LoginContext'\r\n\r\nconst Header = () => {\r\n\r\n    //Setando o reset para o logout\r\n    const { setToken, setIsAdding, setIsEditing } = useLogin()\r\n\r\n    return (\r\n\r\n        <div className=\"header-container\">\r\n            <svg width=\"146\" height=\"37\" viewBox=\"0 0 146 37\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.7433 28.2321H80.5084V12.1469H75.7433V13.8375H75.6957C75.1238 12.8231 73.6943 11.5672 71.0735 11.5672C66.8326 11.5672 63.0681 14.9002 63.0681 20.1654C63.0681 24.7542 66.0225 28.7635 71.0735 28.7635C72.9319 28.7635 74.8856 28.0389 75.6957 26.4932H75.7433V28.2321ZM75.7433 20.1649C75.7433 21.7106 74.7426 24.2708 71.7882 24.2708C68.9292 24.2708 67.8332 21.7106 67.8332 20.2132C67.8332 18.3777 69.0245 16.0591 71.7406 16.0591C74.4091 16.0591 75.7433 18.2327 75.7433 20.1649Z\" fill=\"#212121\"/>\r\n                <path d=\"M92.6118 28.1838H87.8467L82.4144 12.0985H87.1795L90.2292 22.1458H90.2769L93.4695 12.0985H98.2346L92.6118 28.1838Z\" fill=\"#212121\"/>\r\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M110.767 27.2657C112.101 26.3479 113.245 24.9471 114.007 23.1598V23.1115H109.147C108.479 23.9327 107.717 24.609 106.24 24.609C104.381 24.609 102.809 23.498 102.523 21.5658H114.436C114.439 21.5432 114.442 21.5207 114.445 21.4984C114.49 21.1873 114.531 20.8958 114.531 20.3099C114.531 15.3829 110.957 11.5186 106.145 11.5186C101.284 11.5186 97.8056 15.6727 97.8056 20.165C97.8056 24.9954 101.713 28.7148 106.24 28.7148C107.86 28.7148 109.432 28.2318 110.767 27.2657ZM106.192 15.6241C108.67 15.6241 109.623 17.4113 109.814 18.3774H102.571C102.809 17.4113 103.714 15.6241 106.192 15.6241Z\" fill=\"#212121\"/>\r\n                <path d=\"M121.917 12.0982H126.349V13.7888H126.396C126.778 13.016 127.635 11.5186 130.351 11.5186V16.349C128.159 16.3973 126.635 16.8803 126.635 19.2955V28.1352H121.869V12.0982H121.917Z\" fill=\"#212121\"/>\r\n                <path d=\"M139.929 16.6392C139.882 16.301 139.834 15.4316 138.452 15.4316C137.452 15.4316 137.118 16.0595 137.118 16.4942C137.118 17.3637 138.309 17.8468 139.548 18.2332C142.217 19.0061 145.123 19.7789 145.123 23.2568C145.123 26.6381 142.169 28.7635 138.643 28.7635C136.26 28.7635 132.591 27.6525 132.162 23.4017H136.88C137.07 24.8992 138.5 24.8992 138.69 24.8992C139.5 24.8992 140.358 24.4161 140.358 23.6433C140.358 22.3873 139.167 22.2424 136.165 21.0831C134.116 20.4069 132.4 19.0544 132.4 16.8807C132.4 13.6926 135.26 11.5672 138.547 11.5672C140.644 11.5672 144.266 12.3884 144.647 16.6392H139.929Z\" fill=\"#212121\"/>\r\n                <path d=\"M59.3512 12.9676C58.4935 12.1947 56.8257 11.5667 55.3008 11.5667C52.4894 11.5667 51.87 13.0642 51.3934 13.837H51.3458V12.1464H46.9142V28.2316H51.6794V18.4259C51.6794 17.7014 51.9653 17.0734 52.4418 16.6387C52.4894 16.5904 52.5371 16.5421 52.5847 16.5421C52.6324 16.4938 52.68 16.4455 52.7277 16.4455H52.7753C53.1565 16.2039 53.5854 16.059 54.0619 16.059C54.6814 16.059 55.2055 16.3005 55.6344 16.687C56.1109 17.1217 56.4445 17.7497 56.4445 18.4742V19.1022C56.4445 19.1988 56.4445 19.3437 56.4445 19.4403V28.2316H61.2096V18.1361C61.2096 14.9963 60.2089 13.6921 59.3512 12.9676Z\" fill=\"#212121\"/>\r\n                <path d=\"M117.628 28.2315C116.294 28.2315 115.246 27.1688 115.246 25.8163C115.246 24.4638 116.294 23.4011 117.628 23.4011C118.963 23.4011 120.011 24.4638 120.011 25.8163C120.011 27.1205 118.963 28.2315 117.628 28.2315Z\" fill=\"#212121\"/>\r\n                <path d=\"M17.7903 27.9156L17.3645 37L25.0294 27.0166L25.8338 19.5409L32.1266 13.2481L37.0473 0L23.7992 4.8734L17.4591 11.1662L9.98338 11.9706L0 19.6355L9.0844 19.2097L17.7903 27.9156Z\" fill=\"#212121\"/>\r\n                <path d=\"M9.51005 22.2847L14.7147 27.5366L7.00238 30.3282L9.51005 22.2847Z\" fill=\"#212121\"/>\r\n            </svg>\r\n            <p onClick={()=>{setToken(null); setIsAdding(false); setIsEditing(false)}}>Sair</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import '../styles/title.css'\r\nimport { useLogin } from '../contexts/LoginContext'\r\n\r\nconst Title = () => {\r\n\r\n    //Setando o hook para o adicionar\r\n    const { setIsAdding } = useLogin()\r\n\r\n    return (\r\n        <div className=\"title-container\">\r\n            <h2>Navers</h2>\r\n            <button onClick={()=>{setIsAdding(true)}}>Adicionar Naver</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","import '../styles/dashboard.css'\r\nimport Header from '../components/Header'\r\nimport Title from '../components/Title'\r\nimport {useLogin} from '../contexts/LoginContext'\r\nimport axios from 'axios'\r\nimport { useEffect } from \"react\"\r\n\r\nconst DashboadPage = ({ history }) => {\r\n\r\n    //Pegando os dados do context\r\n    const { navers, setNavers, currentNaver, setCurrentNaver, token, apiURL, isDelete, setIsDelete, isInspect, setIsInspect, isAdding, setIsEditing, isEditing, isConfirmation, setIsConfirmation } = useLogin()\r\n\r\n    //Função da atualização da lista dos navers\r\n    const getNavers = () => {\r\n        axios.get(`${apiURL}/navers`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then((response) => {\r\n            setNavers(response.data)\r\n        })\r\n        .catch((err) => {\r\n            alert(err)\r\n        })\r\n    }\r\n\r\n    //Função de deletar naver\r\n    const deleteNaver = () => {\r\n        axios.delete(`${apiURL}/navers/${currentNaver}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(() => {\r\n            setCurrentNaver(null)\r\n            setIsConfirmation(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err)\r\n        })\r\n    }\r\n\r\n    //UseEffect da lista dos navers\r\n    useEffect(() => {\r\n        getNavers()\r\n    }, [setNavers, setCurrentNaver, navers])\r\n\r\n\r\n    //UseEffect do logout\r\n    useEffect(() => {\r\n        if (token === null){\r\n            history.push('/')\r\n        }\r\n    }, [token])\r\n\r\n    //UseEffect do adicionar naver\r\n    useEffect(() => {\r\n        if (isAdding === true){\r\n            history.push('/createnaver')\r\n        }\r\n    }, [isAdding])\r\n\r\n    //UseEffect do editar naver\r\n    useEffect(() => {\r\n        if (isEditing === true){\r\n            history.push('/editnaver')\r\n        }\r\n    }, [isEditing])\r\n    \r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <Header />\r\n            <Title />\r\n            <div className=\"navers-container\">\r\n\r\n                {/* Render do dashboard*/}\r\n                {(navers !== null) ? (\r\n                    navers.map((naver) => {\r\n                        return(\r\n                            <div className=\"naver-card\">\r\n                                <img src={naver.url} alt={`Foto ${naver.name}`} onClick={()=>{setIsInspect(true); setCurrentNaver(naver)}}></img>\r\n                                <strong>{naver.name}</strong>\r\n                                <p>{naver.job_role}</p>\r\n                                <>\r\n                                    <svg width=\"14\" height=\"18\" viewBox=\"0 0 14 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>{setIsDelete(true); setCurrentNaver(naver.id)}}>\r\n                                        <path d=\"M1 18H13V4H1V18ZM14 1H10.5L9.5 0H4.5L3.5 1H0V3H14V1Z\" fill=\"#212121\"/>\r\n                                    </svg>\r\n                                    <svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>{setIsEditing(true); setCurrentNaver(naver.id)}}>\r\n                                        <path d=\"M0 15.25V19H3.75L14.81 7.94L11.06 4.19L0 15.25ZM18.41 4.34L14.66 0.589996L12.13 3.13L15.88 6.88L18.41 4.34Z\" fill=\"#212121\"/>\r\n                                    </svg>\r\n                                </>\r\n                            </div> \r\n                        )\r\n                    })\r\n                ) : ('')}         \r\n            </div>\r\n\r\n            {/* Render do modal do delete */}\r\n            {isDelete ? (\r\n                <div className=\"modal-background\">\r\n                    <div className=\"modal-container\">\r\n                        <h2>Excluir Naver</h2>\r\n                        <p>Tem certeza que deseja excluir este Naver?</p>\r\n                        <div className=\"buttons-container\">\r\n                            <button onClick={()=>{setIsDelete(false)}} className=\"cancel-button\">Cancelar</button>\r\n                            <button onClick={()=>{setIsDelete(false); deleteNaver()}} className=\"confirm-button\">Excluir</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n\r\n            {/* Render do modal da confirmação */}\r\n            {isConfirmation ? (\r\n                <div className=\"modal-background\">\r\n                    <div className=\"modal-container\">\r\n                        <h2>Naver Excluído</h2>\r\n                        <p>Naver excluído com sucesso!</p>\r\n                        <div className=\"buttons-container\">\r\n                        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>{setIsConfirmation(false)}}>\r\n                            <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"#212121\"/>\r\n                        </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n\r\n            {/* Render do modal do inspect */}\r\n            {isInspect ? (\r\n                <div className=\"modal-background\">\r\n                    <div className=\"modal-container-inspect\">\r\n                        <div className=\"inspect-image-container\">\r\n                            <img src={currentNaver.url} alt={`Foto ${currentNaver.name}`}></img>\r\n                        </div>\r\n                        <div className=\"inspect-text-container\">\r\n                            <h2>{currentNaver.name}</h2>\r\n                            <p>{currentNaver.job_role}</p>\r\n                            <strong>Idade</strong>\r\n                            <p>Lorem Ipsum</p>\r\n                            <strong>Tempo de Empresa</strong>\r\n                            <p>Lorem Ipsum</p>\r\n                            <strong>Projetos que participou</strong>\r\n                            <p>{currentNaver.project}</p>\r\n                            <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"  onClick={()=>{setIsInspect(false); setCurrentNaver(null)}}>\r\n                                <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"#212121\"/>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboadPage\r\n","import '../styles/inputs.css'\r\nimport Header from \"../components/Header\"\r\nimport {useLogin} from '../contexts/LoginContext'\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst CreatePage = ({ history }) => {\r\n\r\n    //Pegando os dados do context\r\n    const { token, apiURL, setIsAdding, isConfirmation, setIsConfirmation } = useLogin()\r\n\r\n    //Função para retornar ao dashboard\r\n    const backToDashboard = () => {\r\n        history.push('/dashboard')\r\n        setIsAdding(false)\r\n        setJob_role(null)\r\n        setAdmission_date(null)\r\n        setBirthdate(null)\r\n        setName(null)\r\n        setProject(null)\r\n        setUrl(null)\r\n    }\r\n\r\n    //UseEffect do logout\r\n    useEffect(() => {\r\n        if (token === null){\r\n            history.push('/')\r\n        }\r\n    }, [token])\r\n\r\n    //Setando as variáveis que recebem os dados dos inputs\r\n    const [ job_role, setJob_role ] = useState(null)\r\n    const [ admission_date, setAdmission_date ] = useState(null)\r\n    const [ birthdate, setBirthdate ] = useState(null)\r\n    const [ name, setName ] = useState(null)\r\n    const [ project, setProject ] = useState(null)\r\n    const [ url, setUrl ] = useState(null)\r\n\r\n    //Função adicionar Naver\r\n    const handleAdicionar = async () => {\r\n\r\n        //Pegando a data atual para comparar com as datas informadas pelo usuário\r\n        let today = new Date().toISOString().slice(0, 10)\r\n\r\n        //Checagem se todos os campos estão preenchidos\r\n        if (\r\n            job_role === null ||\r\n            admission_date === null ||\r\n            birthdate === null ||\r\n            name === null ||\r\n            project === null ||\r\n            url === null\r\n            ) {\r\n                alert(\"Por favor preencha todos os campos antes de prosseguir\")\r\n\r\n        //Checagem se as datas informadas são inferiores à data atual\r\n        } else if (\r\n            admission_date > today ||\r\n            birthdate > today ||\r\n            birthdate > admission_date\r\n            ){\r\n                alert(\"Desculpe, mas não aceitamos cadastros de viajantes no tempo\")\r\n        } else {\r\n        try {\r\n\r\n            //Formatando as datas dos inputs para ficarem no padrão suportado pela API\r\n            let BDyear = birthdate.slice(0, 4)\r\n            let BDmonth = birthdate.slice(5, 7)\r\n            let BDday = birthdate.slice(8)\r\n\r\n            let ADyear = admission_date.slice(0, 4)\r\n            let ADmonth = admission_date.slice(5, 7)\r\n            let ADday = admission_date.slice(8)\r\n\r\n            //Setando o objeto com os dados a serem adicionados  \r\n            let dadosAdicionar = {\r\n                job_role: job_role,\r\n                admission_date: `${ADday}/${ADmonth}/${ADyear}`,\r\n                birthdate: `${BDday}/${BDmonth}/${BDyear}`,\r\n                project: project,\r\n                name: name,\r\n                url: url,\r\n            }\r\n            const resultAdicionar = await axios.post(`${apiURL}/navers`, dadosAdicionar, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            .then(() => {\r\n                setIsConfirmation(true)\r\n            })\r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"inputs-container\">\r\n            <Header />\r\n            <div className=\"input-container\">\r\n                <div className=\"input-container-header\">\r\n                    <svg width=\"13\" height=\"20\" viewBox=\"0 0 13 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>{backToDashboard()}}>\r\n                        <path d=\"M12.51 1.86998L10.73 0.0999756L0.839996 9.99998L10.74 19.9L12.51 18.13L4.38 9.99998L12.51 1.86998Z\" fill=\"black\"/>\r\n                    </svg>\r\n                    <h1>Adicionar Naver</h1>\r\n                </div>\r\n                <div className=\"inputs-grid\">\r\n                    <div>\r\n                        <strong>Nome</strong>\r\n                        <input \r\n                        placeholder=\"Nome\"\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Cargo</strong>\r\n                        <input \r\n                        placeholder=\"Cargo\"\r\n                        type=\"text\"\r\n                        value={job_role}\r\n                        onChange={(e) => setJob_role(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Data de nascimento</strong>\r\n                        <input \r\n                        placeholder=\"Data de nascimento\"\r\n                        type=\"date\"\r\n                        value={birthdate}\r\n                        onChange={(e) => setBirthdate(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Data de admissão</strong>\r\n                        <input \r\n                        placeholder=\"Data de admissão\"\r\n                        type=\"date\"\r\n                        value={admission_date}\r\n                        onChange={(e) => setAdmission_date(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Projetos que participou</strong>\r\n                        <input \r\n                        placeholder=\"Projetos que participou\"\r\n                        type=\"text\"\r\n                        value={project}\r\n                        onChange={(e) => setProject(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>URL da foto do Naver</strong>\r\n                        <input \r\n                        placeholder=\"URL da foto do Naver\"\r\n                        type=\"url\"\r\n                        value={url}\r\n                        onChange={(e) => setUrl(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button onClick={handleAdicionar}>Salvar</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Render do modal da confirmação da adição*/}\r\n            {isConfirmation ? (\r\n                <div className=\"modal-background\">\r\n                    <div className=\"modal-container\">\r\n                        <h2>Naver Criado</h2>\r\n                        <p>Naver criado com sucesso!</p>\r\n                        <div className=\"buttons-container\">\r\n                        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>{setIsConfirmation(false)}}>\r\n                            <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"#212121\"/>\r\n                        </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePage","import '../styles/inputs.css'\r\nimport Header from \"../components/Header\"\r\nimport {useLogin} from '../contexts/LoginContext'\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst EditPage = ({ history }) => {\r\n\r\n    //Pegando os dados do context\r\n    const { token, apiURL, setIsEditing, isConfirmation, setIsConfirmation, currentNaver, setCurrentNaver } = useLogin()\r\n\r\n    //Função para retornar ao dashboard\r\n    const backToDashboard = () => {\r\n        history.push('/dashboard')\r\n        setIsEditing(false)\r\n        setCurrentNaver(null)\r\n        setJob_role(null)\r\n        setAdmission_date(null)\r\n        setBirthdate(null)\r\n        setName(null)\r\n        setProject(null)\r\n        setUrl(null)\r\n    }\r\n\r\n    //UseEffect do logout\r\n    useEffect(() => {\r\n        if (token === null){\r\n            history.push('/')\r\n        }\r\n    }, [token])\r\n\r\n    //Setando as variáveis que recebem os dados dos inputs\r\n    const [ job_role, setJob_role ] = useState(null)\r\n    const [ admission_date, setAdmission_date ] = useState(null)\r\n    const [ birthdate, setBirthdate ] = useState(null)\r\n    const [ name, setName ] = useState(null)\r\n    const [ project, setProject ] = useState(null)\r\n    const [ url, setUrl ] = useState(null)\r\n\r\n    //Função do salvar a alteração no Naver\r\n    const handleEditar = async () => {\r\n\r\n        //Pegando a data atual para comparar com as datas informadas pelo usuário\r\n        let today = new Date().toISOString().slice(0, 10)\r\n\r\n        //Checagem se todos os campos estão preenchidos\r\n        if (\r\n            job_role === null ||\r\n            admission_date === null ||\r\n            birthdate === null ||\r\n            name === null ||\r\n            project === null ||\r\n            url === null\r\n            ) {\r\n                alert(\"Por favor preencha todos os campos antes de prosseguir\")\r\n\r\n        //Checagem se as datas informadas são inferiores à data atual\r\n        } else if (\r\n            admission_date > today ||\r\n            birthdate > today ||\r\n            birthdate > admission_date\r\n            ){\r\n                alert(\"Desculpe, mas não aceitamos cadastros de viajantes no tempo\")\r\n        } else {\r\n        try {\r\n\r\n            //Formatando as datas dos inputs para ficarem no padrão suportado pela API\r\n            let BDyear = birthdate.slice(0, 4)\r\n            let BDmonth = birthdate.slice(5, 7)\r\n            let BDday = birthdate.slice(8)\r\n\r\n            let ADyear = admission_date.slice(0, 4)\r\n            let ADmonth = admission_date.slice(5, 7)\r\n            let ADday = admission_date.slice(8)\r\n\r\n            //Setando o objeto com os dados a serem editados\r\n            let dadosEditar = {\r\n                job_role: job_role,\r\n                admission_date: `${ADday}/${ADmonth}/${ADyear}`,\r\n                birthdate: `${BDday}/${BDmonth}/${BDyear}`,\r\n                project: project,\r\n                name: name,\r\n                url: url,\r\n            }\r\n            const resultEditar = await axios.put(`${apiURL}/navers/${currentNaver}`, dadosEditar, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            .then(() => {\r\n                setIsConfirmation(true)\r\n            })\r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"inputs-container\">\r\n            <Header />\r\n            <div className=\"input-container\">\r\n                <div className=\"input-container-header\">\r\n                    <svg width=\"13\" height=\"20\" viewBox=\"0 0 13 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>{backToDashboard()}}>\r\n                        <path d=\"M12.51 1.86998L10.73 0.0999756L0.839996 9.99998L10.74 19.9L12.51 18.13L4.38 9.99998L12.51 1.86998Z\" fill=\"black\"/>\r\n                    </svg>\r\n                    <h1>Editar Naver</h1>\r\n                </div>\r\n                <div className=\"inputs-grid\">\r\n                    <div>\r\n                        <strong>Nome</strong>\r\n                        <input \r\n                        placeholder=\"Nome\"\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Cargo</strong>\r\n                        <input \r\n                        placeholder=\"Cargo\"\r\n                        type=\"text\"\r\n                        value={job_role}\r\n                        onChange={(e) => setJob_role(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Data de nascimento</strong>\r\n                        <input \r\n                        placeholder=\"Data de nascimento\"\r\n                        type=\"date\"\r\n                        value={birthdate}\r\n                        onChange={(e) => setBirthdate(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Data de admissão</strong>\r\n                        <input \r\n                        placeholder=\"Data de admissão\"\r\n                        type=\"date\"\r\n                        value={admission_date}\r\n                        onChange={(e) => setAdmission_date(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Projetos que participou</strong>\r\n                        <input \r\n                        placeholder=\"Projetos que participou\"\r\n                        type=\"text\"\r\n                        value={project}\r\n                        onChange={(e) => setProject(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <strong>URL da foto do Naver</strong>\r\n                        <input \r\n                        placeholder=\"URL da foto do Naver\"\r\n                        type=\"url\"\r\n                        value={url}\r\n                        onChange={(e) => setUrl(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button onClick={handleEditar}>Salvar</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Render do modal da confirmação da adição*/}\r\n            {isConfirmation ? (\r\n                <div className=\"modal-background\">\r\n                    <div className=\"modal-container\">\r\n                        <h2>Naver Atualizado</h2>\r\n                        <p>Naver atualizado com sucesso!</p>\r\n                        <div className=\"buttons-container\">\r\n                        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick={()=>{setIsConfirmation(false)}}>\r\n                            <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" fill=\"#212121\"/>\r\n                        </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPage\r\n","import './Global.css';\nimport LoginProvider from './contexts/LoginContext'\nimport { Route, Switch, BrowserRouter} from \"react-router-dom\"\nimport LoginPage from './pages/LoginPage'\nimport DashboardPage from './pages/DashboardPage'\nimport CreatePage from './pages/CreatePage'\nimport EditPage from './pages/EditPage'\nimport React from \"react\"\n\nfunction App() {\n\n  return (\n    <LoginProvider>\n      <BrowserRouter>\n        <div className=\"app-container\">\n          <Switch>\n            <Route path={\"/\"} exact component={LoginPage} />\n            <Route path={\"/dashboard\"} exact component={DashboardPage} />\n            <Route path={\"/createnaver\"} exact component={CreatePage} />\n            <Route path={\"/editnaver\"} exact component={EditPage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </LoginProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}